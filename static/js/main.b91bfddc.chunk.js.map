{"version":3,"sources":["VariableForm.js","Summary.js","CompoundInterestChart.js","App.js","index.js"],"names":["defaultState","initialAmount","period","growthRate","monthlyContribution","VariablesForm","onUpdate","React","useState","state","setState","className","htmlFor","class","type","id","name","min","max","step","width","value","onChange","target","Number","onClick","Summary","data","length","toFixed","replace","scope","map","label","renderTooltip","payload","CompoundInterestChart","useMemo","result","i","lastFutureValue","push","Math","pow","style","height","ResponsiveContainer","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","Label","offset","position","YAxis","Tooltip","content","Line","App","VariableForm","variables","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b91bfddc.chunk.js","sourcesContent":["import React from \"react\"; \nimport \"./assets/style.css\"\n\nconst defaultState = {\n  initialAmount: 4000,\n  period: 10,\n  growthRate: 5,\n  monthlyContribution: 100\n};\n\nfunction VariablesForm({ onUpdate }) {\n  const [state, setState] = React.useState(defaultState);\n\n  const { initialAmount, period, growthRate, monthlyContribution } = state;\n\n  return (\n    <section>\n      <h2>Financials</h2>\n      <div className=\"formContainer\">\n        <label className=\"inputBox\" htmlFor=\"initialAmount\">\n          Initial Amount(Rs.) \n          <br/> <br/> \n          <div class=\"inputFlex\">\n            <input\n              type=\"range\"\n              id=\"initialAmount\"\n              name=\"initialAmount\"\n              min=\"1000\"\n              max=\"20000\"\n              step=\"500\"\n              width=\"200px\"\n              class=\"slider\"\n              value={initialAmount}\n              onChange={({ target }) => setState({ ...state, initialAmount: Number(target.value) })}\n            />\n            <input\n              class=\"inputDisplay\"\n              type=\"number\"\n              id=\"initialAmount\"\n              name=\"initialAmount\"\n              value={initialAmount}\n              onChange={({ target }) => setState({ ...state, initialAmount: Number(target.value) })}\n            /> \n          </div> \n          \n        </label>\n        \n        <label className=\"inputBox\" htmlFor=\"period\">\n          Investment Period (Years) \n          <br/> <br/>  \n          <div className=\"inputFlex\">\n            <input\n              class=\"slider\"\n              type=\"range\"\n              min=\"1\"\n              max=\"20\"\n              id=\"period\"\n              name=\"period\"\n              width=\"200px\"\n              value={period}\n              onChange={({ target }) => setState({ ...state, period: Number(target.value) })}\n            />\n            <input\n              class=\"inputDisplay\"\n              type=\"number\"\n              id=\"period\"\n              name=\"period\"\n              value={period}\n              onChange={({ target }) => setState({ ...state, period: Number(target.value) })}\n            />\n          </div>\n          \n        </label>\n        \n        <label className=\"inputBox\" htmlFor=\"growthRate\">\n          Annual Growth Rate (%)\n          <br/> <br/> \n          <div className=\"inputFlex\">\n            <input\n              class=\"slider\"\n              type=\"range\"\n              min=\"3\"\n              max=\"20\"\n              step=\"0.1\"\n              id=\"growthRate\"\n              name=\"growthRate\"\n              width=\"200px\"\n              value={growthRate}\n              onChange={({ target }) => setState({ ...state, growthRate: Number(target.value) })}\n            />\n            <input\n              class=\"inputDisplay\"\n              type=\"number\"\n              id=\"growthRate\"\n              name=\"growthRate\"\n              value={growthRate}\n              onChange={({ target }) => setState({ ...state, growthRate: Number(target.value) })}\n            /> \n          </div>\n          \n        </label>\n        \n        <label className=\"inputBox\" htmlFor=\"monthlyContribution\">\n          Monthly Contribution (Rs.) \n          <br/> <br/> \n          <div className=\"inputFlex\">\n          <input\n            type=\"range\"\n            id=\"monthlyContribution\"\n            min=\"100\"\n            max=\"10000\"\n            step=\"100\"\n            width=\"200px\"\n            name=\"monthlyContribution\"\n            value={monthlyContribution}\n            onChange={({ target }) =>\n              setState({ ...state, monthlyContribution: Number(target.value) })\n            }\n            class=\"slider\"\n          />\n            <input\n            class=\"inputDisplay\"\n            type=\"number\"\n            id=\"monthlyContribution\"\n            name=\"monthlyContribution\"\n            value={monthlyContribution}\n            onChange={({ target }) =>\n              setState({ ...state, monthlyContribution: Number(target.value) })\n            }\n          />\n          </div>\n          \n        </label>\n        \n      </div>\n      <button class=\"submitButton\" type=\"button\" onClick={() => onUpdate(state)}>\n        Update Chart\n      </button>\n    </section>\n  );\n}\n\nexport default VariablesForm;\n","import React from 'react';\nimport \"./assets/style.css\"\n\nfunction toNumber(value) {\n  return value.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nconst Summary = ({ period, data })=> {\n  return (\n    <div className=\"SummaryContainer\">\n      <h2>SUMMARY</h2>\n      <p>\n        In {period} years, you will have Rs.{toNumber(data[data.length - 1].value)}\n      </p>\n      <h3>Breakdown</h3>\n      <table>\n        <thead>\n          <tr>\n            <th scope=\"col\">End of Year</th> \n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead> \n        <tbody>\n          {data.map(({ label, value }) => (\n            \n            <tr key={label}>\n              <td>{label}</td> \n              <td>Rs.{value.toFixed(2)}</td>\n              \n            </tr>\n          ))}\n        </tbody> \n      </table>\n    </div>\n  );\n}\n\nexport default Summary;\n","import React from 'react';\nimport {\n  Label,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer\n} from \"recharts\";\n\nimport Summary from './Summary';\nimport \"./assets/style.css\"\n\n\nfunction renderTooltip({ payload }) {\n  if (!payload[0]) {\n    return(\n      <div></div>\n    );\n  }\n\n  return <span>{`Rs.${payload[0].value.toFixed(2)}`}</span>;\n}\n\nconst CompoundInterestChart = ({ initialAmount, period, growthRate, monthlyContribution })=> {\n  const data = React.useMemo(\n    () => {\n      const result = [];\n\n      for (let i = 1; i <= period; i++) {\n        let lastFutureValue = initialAmount + monthlyContribution * 12;\n        if (result.length > 0) {\n          lastFutureValue = result[result.length - 1].value + monthlyContribution * 12;\n        }\n        result.push({\n          label: `${i}`,\n          value: lastFutureValue * Math.pow(1 + growthRate / 100, 1)\n        });\n      }\n\n      return result;\n    },\n    [initialAmount, period, growthRate, monthlyContribution]\n  );\n\n  return ( \n    <div className=\"charts\">\n    <h2>Projected Growth</h2>\n      <div style={{ width: \"100%\", height: 300 }}>\n        <ResponsiveContainer>\n          <LineChart\n            width={500}\n            height={300}\n            data={data}\n            margin={{\n              top: 5,\n              right: 30,\n              left: 0,\n              bottom: 5\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"label\">\n              <Label value=\"Years\" offset={-3} position=\"insideBottom\" />\n            </XAxis>\n            <YAxis />\n            <Tooltip content={renderTooltip} />\n            <Line type=\"monotone\" dataKey=\"value\" />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n      <hr />\n      <br/>\n      <Summary period={period} data={data} />\n    </div>\n       \n  );\n}\n\nexport default CompoundInterestChart;\n","import React from 'react'; \n\nimport VariableForm from './VariableForm';\nimport CompoundInterestChart from './CompoundInterestChart'; \nimport \"./assets/style.css\"\n\nconst defaultState = {\n  initialAmount: 4000,\n  period: 10,\n  growthRate: 5,\n  monthlyContribution: 100\n};\n\n\nconst App = ()=> {\n    const [state, setState] = React.useState(defaultState);\n  \n    return (\n      <div className=\"wrapper\">\n        <div className=\"Appcontainer\">\n          <div className=\"top-child\">\n            <h1 className=\"text-center\" ><b>Annual Compound Interest Calculator</b></h1> \n          </div>\n          <div className=\"bottom-child\">\n            <div className=\"annualCompoundCalculator\">\n              <div className=\"left-child\">\n                \n                <VariableForm onUpdate={variables => setState(variables)} />\n                <br/><br/>\n              </div>\n              <div class=\"right-child\">\n                <CompoundInterestChart {...state} />  \n              </div> \n            </div> \n          </div>\n        </div>\n      </div>\n      \n    );\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App/>,document.getElementById('root'));"],"sourceRoot":""}